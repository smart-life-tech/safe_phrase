esphome:
  name: safephrase-wake
  comment: "ESP32 INMP441 wake-word detector for SafePhrase system"
  platformio_options:
    board_build.flash_mode: dio

  on_boot:
    priority: -10
    then:
      - delay: 5s
      - logger.log: "üé§ Starting offline wake word detection..."

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESP_ADF_SUPPORT: y
      CONFIG_ESP_SR_WN9_ENABLE: y     # Enable WakeNet9 (offline wake-word)
      CONFIG_ESP_SR_MN1_ENABLE: n
      CONFIG_ESP_SR_MN2_ENABLE: n
      CONFIG_ESP_SR_MN3_ENABLE: n

logger:
  level: VERY_VERBOSE

wifi:
  ssid: "TECNO SPARK 5 Air"
  password: "1234567890"
  power_save_mode: none
  ap:
    ssid: "wakeword-esp32"
    password: "WakeESP32"

# ---------------------------
# Microphone (I2S INMP441)
# ---------------------------
i2s_audio:
  - id: mic_bus
    i2s_lrclk_pin: GPIO25
    i2s_bclk_pin: GPIO26

microphone:
  - platform: i2s_audio
    id: mic
    adc_type: external
    i2s_audio_id: mic_bus
    i2s_din_pin: GPIO22
    channel: right
    bits_per_sample: 32bit
    sample_rate: 16000

# ---------------------------
# Offline Wake Word Detection
# ---------------------------
# NOTE: WakeNet9 default wake word = ‚ÄúHi ESP‚Äù
# (You can switch model later for ‚ÄúAlexa‚Äù, ‚ÄúHi Nabu‚Äù, etc.)

speech_recognition:
  model: wn9        # Use WakeNet9 model
  microphone: mic
  on_wake_word_detected:
    - logger.log: "‚úÖ Wake word detected!"
    - output.turn_on: led_out
    - delay: 1s
    - output.turn_off: led_out

# ---------------------------
# LED or GPIO Trigger Output
# ---------------------------
output:
  - platform: gpio
    id: led_out
    pin: GPIO4

light:
  - platform: binary
    name: "Wake LED"
    output: led_out
